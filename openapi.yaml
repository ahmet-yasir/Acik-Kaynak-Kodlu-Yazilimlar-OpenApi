openapi: 3.0.0
info:
  title: Flask User Management API
  description: A simple API to manage user data with CRUD operations.
  version: 1.0.0
servers:
  - url: http://localhost:5000/
    description: Local server
paths:
  /users:
    get:
      summary: List all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
  /users/{userIndex}:
    get:
      summary: Get a user by index
      parameters:
        - in: path
          name: userIndex
          schema:
            type: integer
          required: true
          description: Index of the user to get
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update a user by index
      parameters:
        - in: path
          name: userIndex
          schema:
            type: integer
          required: true
          description: Index of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      summary: Delete a user by index
      parameters:
        - in: path
          name: userIndex
          schema:
            type: integer
          required: true
          description: Index of the user to delete
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found
components:
  schemas:
    User:
      type: object
      required:
        - name
        - phone
        - email
      properties:
        name:
          type: string
          example: John Doe
        phone:
          type: string
          pattern: '^\d{10}$'
          example: '1234567890'
        email:
          type: string
          format: email
          example: 'john.doe@example.com'
